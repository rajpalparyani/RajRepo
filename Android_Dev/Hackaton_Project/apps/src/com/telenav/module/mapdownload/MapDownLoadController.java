/**
 *
 * Copyright 2012 TeleNav, Inc. All rights reserved.
 * MapDownLoadController.java
 *
 */
package com.telenav.module.mapdownload;

import com.telenav.data.serverproxy.IUserProfileProvider;
import com.telenav.module.ModuleFactory;
import com.telenav.module.upsell.FeaturesManager;
import com.telenav.mvc.AbstractCommonController;
import com.telenav.mvc.AbstractController;
import com.telenav.mvc.AbstractModel;
import com.telenav.mvc.AbstractView;
import com.telenav.mvc.StateMachine;

/**
 *@author yren
 *@date 2012-12-11
 */
public class MapDownLoadController extends AbstractCommonController implements IMapDownLoadConstants
{
    private final static int[][] STATE_TABLE = new int[][]
    {
    { STATE_VIRGIN, EVENT_CONTROLLER_START, STATE_CHECK_DELETING, ACTION_CHECK_DELETING },
    { STATE_CHECK_DELETING, EVENT_MODEL_STILL_DELETING, STATE_STILL_DELETING, ACTION_NONE },
    { STATE_CHECK_DELETING, EVENT_MODEL_NOT_DELETING, STATE_REQUEST_DOWNLOADABLE_REGION, ACTION_INIT },
    { STATE_STILL_DELETING, CMD_COMMON_OK, STATE_VIRGIN, ACTION_NONE },
    { STATE_STILL_DELETING, CMD_COMMON_BACK, STATE_VIRGIN, ACTION_NONE },
    { STATE_REQUEST_DOWNLOADABLE_REGION, EVENT_MODEL_SHOW_DOWNLOADABLE_REGION, STATE_MAIN, ACTION_CHECK_STATUS_CHANGED },
    { STATE_DOWNLOADING, EVENT_MODEL_SHOW_DOWNLOADABLE_REGION, STATE_MAIN, ACTION_CHECK_STATUS_CHANGED },
    { STATE_MAIN, EVENT_MODEL_SHOW_DOWNLOADABLE_REGION, STATE_MAIN, ACTION_CHECK_STATUS_CHANGED },
    { STATE_MAIN, CMD_COMMON_BACK, STATE_VIRGIN, ACTION_NONE },
    { STATE_MAIN, CMD_START_DOWNLOAD, STATE_CHECK_WIFI, ACTION_CHECK_WIFI },
    { STATE_MAIN, CMD_UPGRADE, STATE_CHECK_WIFI, ACTION_CHECK_WIFI },
    { STATE_MAIN, CMD_ACTIVATED, STATE_ACTIVE_FEATURE_LIST, ACTION_NONE },
    { STATE_MAIN, CMD_DELETE_DOWNLOAD, STATE_DELETE_MAP_DOWNLOAD_CONFIRM, ACTION_NONE },
    { STATE_MAIN, CMD_REPLACE_DOWNLOAD, STATE_CHECK_WIFI, ACTION_CHECK_WIFI },
    { STATE_DOWNLOADING, CMD_COMMON_BACK, STATE_VIRGIN, ACTION_NONE },
    { STATE_DOWNLOADING, CMD_RESUME_DOWNLOAD, STATE_CHECK_WIFI, ACTION_CHECK_WIFI },
    { STATE_ANY, EVENT_MODEL_DOWNLOAD_COMPLETE, STATE_REQUEST_DOWNLOADABLE_REGION, ACTION_CHECK_REGION_STATUS },
    { STATE_ANY, EVENT_MODEL_SHOW_DOWNLOADING, STATE_DOWNLOADING, ACTION_NONE },
    
    { STATE_DELETE_MAP_DOWNLOAD_CONFIRM, CMD_COMMON_OK, STATE_MAIN, ACTION_DELETE_DOWNLOAD },
    { STATE_MAIN, EVENT_MODEL_SET_BACK_BUTTON, STATE_MAIN, ACTION_NONE },
    
    { STATE_DELETE_MAP_DOWNLOAD_CONFIRM, CMD_COMMON_CANCEL, STATE_PREV, ACTION_NONE },
    { STATE_REPLACE_MAP_DOWNLOAD_CONFIRM, CMD_COMMON_OK, STATE_PREV, ACTION_REPLACE },
    { STATE_REPLACE_MAP_DOWNLOAD_CONFIRM, CMD_COMMON_CANCEL, STATE_PREV, ACTION_NONE },
    { STATE_CANCEL_MAP_DOWNLOAD_CONFIRM, CMD_COMMON_OK, STATE_PREV, ACTION_CANCEL_DOWNLOAD },
    { STATE_CANCEL_MAP_DOWNLOAD_CONFIRM, CMD_COMMON_CANCEL, STATE_PREV, ACTION_NONE },
    { STATE_ANY, CMD_PAUSE_DOWNLOAD, STATE_ANY, ACTION_PAUSE_DOWNLOAD },
    { STATE_ANY, CMD_CANCEL_DOWNLOAD, STATE_CANCEL_MAP_DOWNLOAD_CONFIRM, ACTION_NONE },
    { STATE_WIFI_DISCONNECTED, CMD_COMMON_OK, STATE_PREV, ACTION_NONE },
    { STATE_CHECK_WIFI, EVENT_MODEL_WIFI_DISCONNECTED, STATE_WIFI_DISCONNECTED, ACTION_NONE },
    { STATE_CHECK_WIFI, EVENT_MODEL_START_DOWNLOAD, STATE_CHECK_WIFI, ACTION_START_DOWNLOAD },
    { STATE_CHECK_WIFI, EVENT_MODEL_UPGRADE, STATE_CHECK_WIFI, ACTION_UPGRADE },
    { STATE_CHECK_WIFI, EVENT_MODEL_REPLACE_DOWNLOAD, STATE_REPLACE_MAP_DOWNLOAD_CONFIRM, ACTION_NONE },
    { STATE_COMMON_ERROR, CMD_COMMON_OK, STATE_REQUEST_DOWNLOADABLE_REGION, ACTION_CHECK_REGION_STATUS},
    { STATE_REQUEST_DOWNLOADABLE_REGION, EVENT_MODEL_POST_ERROR, STATE_NOT_INITED_ERROR, ACTION_NONE },
    { STATE_NOT_INITED_ERROR, CMD_COMMON_OK, STATE_PREV, ACTION_NONE },
    { STATE_MAP_DOWNLOADED_STATUS_CHANGED, CMD_COMMON_OK, STATE_REQUEST_DOWNLOADABLE_REGION, ACTION_CHECK_REGION_STATUS },
    { STATE_MAP_DOWNLOADED_STATUS_CHANGED, CMD_COMMON_CANCEL, STATE_REQUEST_DOWNLOADABLE_REGION, ACTION_CHECK_REGION_STATUS },
    { STATE_ANY, EVENT_CONTROLLER_UPSELL_PURCHASE_FINISH, STATE_MAIN, ACTION_CHECK_UPSELL_RETURN },
    { STATE_ANY, EVENT_MODEL_DO_ACTION_AFTER_UP_SELL, STATE_CHECK_WIFI, ACTION_CHECK_WIFI },
    { STATE_ANY, EVENT_MODEL_DO_NOTHING_AFTER_UP_SELL, STATE_MAIN, ACTION_NONE },
    };

    public MapDownLoadController(AbstractController superController)
    {
        super(superController);
    }

    protected void postStateChangeDelegate(int currentState, int nextState)
    {
        if (nextState == STATE_ACTIVE_FEATURE_LIST)
        {
            IUserProfileProvider userProfileProvider = (IUserProfileProvider) model.get(KEY_O_USER_PROFILE_PROVIDER);
            ModuleFactory.getInstance().startUpSellController(this, FeaturesManager.FEATURE_CODE_HYBRID, false,
                userProfileProvider);
        }
    }

    protected AbstractView createView()
    {
        return new MapDownLoadViewTouch(new MapDownLoadUiDecorator());
    }

    protected AbstractModel createModel()
    {
        return new MapDownLoadModel();
    }

    protected StateMachine createStateMachine()
    {
        return new StateMachine(STATE_TABLE_COMMON, STATE_TABLE);
    }
}
