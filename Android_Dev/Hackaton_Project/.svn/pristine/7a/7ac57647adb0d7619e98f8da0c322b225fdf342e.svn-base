<!--
	Crashlytics ant targets for Android 
	v1.1.0

	*****

	If you use the build targets supplied by Android, see crashlytics_build.xml.

	*****
	Features:
	- Adds required Crashlytics Build ID in a string resource file res/values/

	- Automatically uploads ProGuard deobfuscation (aka mapping) files to Crashlytics servers, which
	  enables viewing of deobfuscated stack traces on crashlytics.com with no manual action required.


	How to use:
	- Add the following line to your ant build script, replacing CRASHLYTICS_HOME with the 
	  absolute or relative path to this build file:

		<import file="CRASHLYTICS_HOME/crashlytics_build_base.xml"/>

	- Add the "crashlytics-pre-build" target to the depends list of your build task to ensure cached 
	  deobfuscation files that failed to upload on previous attempts are uploaded to Crashlytics.

	- Add the "crashlytics-code-gen" target to the start of the depends list for your Android resource 
          generation task to autogenerate Crashlytics-required resources for your app.

	- Add the "crashlytics-post-package" target to the depends list for your post-package task to
	  upload your ProGuard mappings file and clean up the Crashlytics-generated resources.
	  to autogenerate Crashlytics-required resources for your app.
	  crashlyitcs-pre-package must be run *after* obfuscation but *before* aapt is executed!

	- The project root directory is assumed to be colocated with build.xml. You can optionally specify
	  an alternate paths to the project root, AndroidManifest.xml, and res directories by declaring:

		<property name="crashlytics.project.path" location="PROJECT.ROOT"/>
		<property name="crashlytics.manifest.path" location="MANIFEST.PARENT/AndroidManifest.xml"/>
		<property name="crashlytics.res.path" location="RES.PARENT/res"/>

	- If the ProGuard mapping file is NOT written the standard location (proguard/mapping.txt), 
	  this line is also required:

	 	<property name="crashlytics.obfuscate.mapping.file" location="YOUR_MAPPING_FILE"/>

	- If you are using an obfuscator other than ProGuard, please contact support@crashlytics.com

-->

<project name="crashlytics_targets_base"> 
	<dirname property="crashlytics.home" file="${ant.file.crashlytics_targets_base}"/>
	<property name="crashlytics.devtools.jar" location="${crashlytics.home}/crashlytics-devtools.jar" />
	<property name="crashlytics.log.config" value="file:///${crashlytics.home}/crashlytics-log4j.properties" />

	<target name="crashlytics-pre-build" depends="crashlytics-cleanup-resources"
		description="Crashlytics target to be invoked prior to building any Android artifacts. Cleans up stale Crashlytics resource files and attempts to upload any cached deobfuscation files" >
		<!-- always attempt to upload any cached files. -->
		<antcall target="crashlytics-upload-deobs" />
	</target>

	<target name="crashlytics-code-gen" depends="crashlytics-generate-resources"
		description="Crashlytics target to be invoked prior to compiling Android artifacts. Generates Crashlytics-required resources." />

	<target name="crashlytics-post-package" depends="crashlytics-store-deobs, crashlytics-upload-deobs"
		description="Crashlytics target to be invoked after completing release builds. Cleans up Crashlytics-generated resource files. Caches and uploads deobfuscation files to Crashlytics servers." >
		<!-- must be invoked via antcall rather than as a dependency because it was already called once. -->
		<antcall target="crashlytics-cleanup-resources" />
	</target>


<!-- You should not need to explicitly invoke tasks below this comment! -->

	<target name="crashlytics-generate-resources" depends="crashlytics-init">
		<java jar="${crashlytics.devtools.jar}" fork="true" failonerror="true">

			<arg value="-projectPath"/> 
			<arg path="${crashlytics.project.path}"/>
			<arg value="-androidManifest"/> 
			<arg path="${crashlytics.manifest.path}"/>
			<arg value="-androidRes"/> 
			<arg path="${crashlytics.res.path}"/>
			<arg value="-generateResourceFile"/>
			<arg value="${crashlytics.verbose}"/>
			<jvmarg value="-Dlog4j.configuration=${crashlytics.log.config}" /> 
		</java>
	</target>

	<target name="crashlytics-cleanup-resources" depends="crashlytics-init">
		<java jar="${crashlytics.devtools.jar}" fork="true" failonerror="true">

			<arg value="-projectPath"/> 
			<arg path="${crashlytics.project.path}"/>
			<arg value="-androidManifest"/> 
			<arg path="${crashlytics.manifest.path}"/>
			<arg value="-androidRes"/> 
			<arg path="${crashlytics.res.path}"/>
			<arg value="-cleanupResourceFile"/>
			<arg value="${crashlytics.verbose}"/>
			<jvmarg value="-Dlog4j.configuration=${crashlytics.log.config}" /> 
		</java>
	</target>

	<target name="crashlytics-store-deobs" depends="crashlytics-init"> 
		<property name="mapping.absolute" location="${crashlytics.obfuscate.mapping.file}"/>
		<property name="crashlytics.obfuscator.id" value="proguard" />
		<property name="crashlytics.obfuscator.version" value="4.7" />
		<if>
		        <equals arg1="${proguard.enabled}" arg2="true"/>
			<then>
				<java jar="${crashlytics.devtools.jar}" fork="true" failonerror="true" spawn="false">
					<arg value="-projectPath"/> 
					<arg path="${crashlytics.project.path}"/>
					<arg value="-androidManifest"/> 
					<arg path="${crashlytics.manifest.path}"/>
					<arg value="-androidRes"/> 
					<arg path="${crashlytics.res.path}"/>
					<arg value="-storeDeobs" />
					<arg file="${mapping.absolute}" />
					<arg value="-obfuscator" />
					<arg value="${crashlytics.obfuscator.id}" />
					<arg value="-obVer" />
					<arg value="${crashlytics.obfuscator.version}" />
					<arg value="${crashlytics.verbose}"/>
					<jvmarg value="-Dlog4j.configuration=${crashlytics.log.config}" /> 
				</java>
			</then>
		</if>		
	</target>

	<target name="crashlytics-upload-deobs" depends="crashlytics-init" description="Uploads stored deobfuscation files to Crashlytics.">
		<java jar="${crashlytics.devtools.jar}" fork="true" failonerror="true" spawn="false">
			<arg value="-projectPath"/> 
			<arg path="${crashlytics.project.path}"/>
			<arg value="-androidManifest"/> 
			<arg path="${crashlytics.manifest.path}"/>
			<arg value="-androidRes"/> 
			<arg path="${crashlytics.res.path}"/>
			<arg value="-uploadDeobs" />
			<arg value="${crashlytics.verbose}"/>
			<jvmarg value="-Dlog4j.configuration=${crashlytics.log.config}" /> 
		</java>
	</target>

	<target name="crashlytics-init" description="Set up internal properties used by Crashlytics ant tasks.">
		<!-- Stock android build scripts assume the PWD is the project location. -->
		<property name="proguard.enabled" value="false"/>
		<property name="crashlytics.project.path" location="${basedir}"/>	
		<property name="crashlytics.manifest.path" location="${basedir}/${subproject_name}/AndroidManifest.xml"/>
		<property name="crashlytics.res.path" location="${basedir}/${subproject_name}/res"/>
		<property name="crashlytics.obfuscate.mapping.file" location="${publish.dir}/proguard-${jar.file}.map"/>
		<!-- Uncomment for verbose output by the CrashlyticsDevTools -->
		<property name="crashlytics.verbose" value="-verbose"/>
		<property name="crashlytics.obfuscator.id" value="proguard" />
	</target>
</project>
