/**
 *
 * Copyright 2011 TeleNav, Inc. All rights reserved.
 * SynthesizerAmrTest.java
 *
 */
package com.telenav.audio;

import static org.junit.Assert.assertArrayEquals;
import static org.junit.Assert.assertNull;

import org.junit.Before;
import org.junit.Test;
import org.powermock.api.easymock.PowerMock;
import org.powermock.reflect.Whitebox;
import org.powermock.reflect.internal.WhiteboxImpl;

import com.telenav.datatypes.audio.AudioData;
import com.telenav.datatypes.audio.AudioDataFactory;

/**
 * @author Casper (pwang@telenav.cn)
 * @date 2011-7-14
 */
public class SynthesizerAmrTest
{
    AudioDataFactory audioDataFactory;

    @Before
    public void setUp()
    {
        audioDataFactory = AudioDataFactory.getInstance();
        amrDataResult = mergeArrayWith6Indent(blankData1, amrData1, amrData2);
        // case for blank should not append.
        amrDataResult2 = mergeArrayWith6Indent(new byte[0], amrData1, amrData2);
        amrDataResult3 = mergeArrayWith6Indent(blankData1, amrData1);
    }

    @Test
    public void testSynthesize()
    {
        // PowerMock.replayAll();
        AudioData test1 = audioDataFactory.createAudioData(amrData1);
        AudioData test2 = audioDataFactory.createAudioData(amrData2);
        AudioData emptyData = audioDataFactory.createAudioData(new byte[]
        { 1, 2, 3 });
        SynthesizerAmr amrSynthesizer = new SynthesizerAmr();
        Whitebox.setInternalState(SynthesizerAmr.class, "blankaudio", blankData1);
        assertNull(amrSynthesizer.synthesize(new AudioData[]
        { emptyData, emptyData }));

        assertArrayEquals(amrDataResult, amrSynthesizer.synthesize(new AudioData[]
        { test1, test2 }));
        assertArrayEquals(amrDataResult3, amrSynthesizer.synthesize(new AudioData[]
        { test1, audioDataFactory.createAudioData(1) }));
        //Test for other sample rate blank data, should not append. 
        Whitebox.setInternalState(SynthesizerAmr.class, "blankaudio", blankData2);
        assertArrayEquals(amrDataResult2, amrSynthesizer.synthesize(new AudioData[]
        { test1, test2 }));
        // PowerMock.verifyAll();
    }

    // frame header = 12
    public static byte[] blankData1 = new byte[]
    { 12, 31, 87, -98, -30, 113, -51, 117, 125, 89, 94, 104, 96, -28, 12, 52, 98, -32, -8, 8, 22, 77, -103, 115, 34, -1, -73, -4, 12, -46,
            -73, 31, 56, 11, -17, 37, -14, 110, 83, 62, -14, 118 };

    // frame header = 36
    public static byte[] blankData2 = new byte[]
    { 36, 31, 87, -98, -30, 113, -51, 117, 125, 89, 94, 104, 96, -28, 12, 52, 98, -32, -8, 8, 22, 77, -103, 115, 34, -1, -73, -4, 12, -46,
            -73, 31, 56, 11, -17, 37, -14, 110, 83, 62, -14, 118 };

    public static byte[] amrData1 = new byte[]
    { 35, 33, 65, 77, 82, 10, 12, 31, 87, -98, -30, 113, -51, 117, 125, 89, 94, 104, 96, -28, 12, 52, 98, -32, -8, 8, 22, 77, -103, 115,
            34, -1, -73, -4, 12, -46, -73, 31, 56, 11, -17, 37, -14, 110, 83, 62, -14, 118, 12, 83, 26, 11, 24, 9, 45, -59, 126, 127, 72,
            -93, -55, 60, 12, -89, 74, 46, 39, 96, -46, 16, -124, 95, -53, -40, 112, 20, 12, -43, -18, -91, 27, 0, -44, 24, 53, 106, 21,
            59, 95, 52, 12, 120, 45, 47, 8, -99, -77, -23, 80, 107, 49, -80, -65, 20, 12, 124, 63, 63, 36, 34, 71, -104, -66, 114, -99,
            104, -77, 100, 12, -87, 62, 69, 41, -112, 47, -7, -20, -86, 2, -8, 84, -10, 12, 43, -35, 67, 44, 33, -26, 107, -3, -100, -85,
            73, -102, -58, 12, -87, -6, 79, 64, -112, 87, -98, -19, -61, 41, 116, -106, 16, 12, 18, 15, 95, 40, -108, 21, -73, -4, 124,
            -117, 58, 11, -6, 12, -87, -42, 103, 48, 37, -113, -69, 82, -84, 78, -72, 6, -6, 12, 18, -125, 111, -124, -53, 7, -122, -100,
            108, 86, -69, -71, -110, 12, -83, 41, 111, 40, -65, 7, -122, 52, 103, 38, 10, 54, -84, 12, 101, 41, 111, 72, -49, 39, -114, 4,
            -77, -105, -126, 105, -10, 12, -83, 55, 110, 77, 43, 23, -41, -33, 76, 41, -42, 100, -66, 12, -43, 19, 111, 45, 47, 79, -60,
            -6, -76, 58, 124, -58, 60, 12, -49, -108, 109, 5, -65, 87, -9, 61, 86, -115, -48, -65, -100 };

    /*
     * public static byte[] amrData1WithBlank = new byte[] { 35, 33, 65, 77, 82, 10, 12, 31, 87, -98, -30, 113, -51,
     * 117, 125, 89, 94, 104, 96, -28, 12, 52, 98, -32, -8, 8, 22, 77, -103, 115, 34, -1, -73, -4, 12, -46, -73, 31, 56,
     * 11, -17, 37, -14, 110, 83, 62, -14, 118, 12, 83, 26, 11, 24, 9, 45, -59, 126, 127, 72, -93, -55, 60, 12, -89, 74,
     * 46, 39, 96, -46, 16, -124, 95, -53, -40, 112, 20, 12, -43, -18, -91, 27, 0, -44, 24, 53, 106, 21, 59, 95, 52, 12,
     * 120, 45, 47, 8, -99, -77, -23, 80, 107, 49, -80, -65, 20, 12, 124, 63, 63, 36, 34, 71, -104, -66, 114, -99, 104,
     * -77, 100, 12, -87, 62, 69, 41, -112, 47, -7, -20, -86, 2, -8, 84, -10, 12, 43, -35, 67, 44, 33, -26, 107, -3,
     * -100, -85, 73, -102, -58, 12, -87, -6, 79, 64, -112, 87, -98, -19, -61, 41, 116, -106, 16, 12, 18, 15, 95, 40,
     * -108, 21, -73, -4, 124, -117, 58, 11, -6, 12, -87, -42, 103, 48, 37, -113, -69, 82, -84, 78, -72, 6, -6, 12, 18,
     * -125, 111, -124, -53, 7, -122, -100, 108, 86, -69, -71, -110, 12, -83, 41, 111, 40, -65, 7, -122, 52, 103, 38,
     * 10, 54, -84, 12, 101, 41, 111, 72, -49, 39, -114, 4, -77, -105, -126, 105, -10, 12, -83, 55, 110, 77, 43, 23,
     * -41, -33, 76, 41, -42, 100, -66, 12, -43, 19, 111, 45, 47, 79, -60, -6, -76, 58, 124, -58, 60, 12, -49, -108,
     * 109, 5, -65, 87, -9, 61, 86, -115, -48, -65, -100, 36, -8, 30, 79, -58, 36, 86, -75, 18, -93, -104, -118, 119,
     * 24, 0, -125, 50, 4, 33, 48, 36, -8, 86, 102, -96, 0, 38, -60, -73, -107, -88, 43, 74, 76, 84, 17, 61, -57, 124,
     * -80, 36, -1, 43, -103, 0, 96, 28, -50, 5, 21, -49, -81, 41, -122, -88, -80, -73, 81, 13, -48, 36, 43, 7, -40,
     * -127, 96, 25, -15, -127, -79, 61, 1, 78, 27, -116, -108, 53, 41, 70, 112, 36, 52, -117, 60, -95, 32, 31, -4, 50,
     * -78, 20, 4, -92, 102, 70, -20, 96, 77, -79, -128, 36, -36, 0, 96, 1, 32, 19, 61, 1, 5, -77, -18, 86, 66, 65, 102,
     * -124, -24, 75, 32, 36, 85, 22, 60, 32, 32, 15, 57, 1, -68, 3, 41, -121, 46, 78, -124, 117, 30, -54, -16, 36, -84,
     * -100, 3, 8, -120, -103, -2, -30, 86, 77, -15, -30, 78, -14, 5, 29, -12, -54, -48, 36, -90, -50, -122, 1, -32, 6,
     * 56, 5, 70, 124, 81, -29, -6, -62, -84, -80, 109, -123, -64, 36, -90, 124, 4, -82, 32, 12, 61, 5, 80, 71, -107,
     * 127, -115, 86, -56, 31, 9, 38, 64, 36, -90, -50, -122, 11, 32, 18, 57, -123, -48, -109, -55, 26, -119, 3, -14,
     * -78, -91, -18, -96, 36, -90, -50, -124, -89, -128, 24, 59, 5, 16, -41, -28, 39, -20, 117, -61, 8, 107, -41, -80,
     * 36, -90, 116, 6, 19, -32, 18, 57, 5, -80, -75, -13, -41, -125, 30, -34, 64, 6, -38, 48, 36, -90, -50, -122, 11,
     * 64, 12, -6, -127, 64, 103, -44, 32, 69, 66, -117, -104, 66, 124, -112, 36, -90, -50, -122, 20, -96, 24, 56, 5,
     * 16, 109, -20, 21, -60, -38, 120, 78, 38, 5, 112, 36, -90, -50, -122, 9, 96, 24, -64, 7, -80, -89, -20, 29, 67,
     * 86, 11, 85, -56, -22, -128, 36, -90, 116, 6, 24, 96, 18, 58, 5, -112, 121, -35, 77, -29, -40, 25, 47, 77, 32,
     * -16, 36, -90, -50, -124, -79, -32, 26, 59, 5, -64, 101, -57, 6, 32, -82, -104, 123, -87, -67, -16, 36, -90, -50,
     * -122, 24, 96, 24, -104, 6, -80, -60, -48, 29, 14, 84, -54, 39, -90, -25, -16, 36, -90, -50, -122, 3, -32, 6, 59,
     * 5, 64, -117, -86, -6, 57, 60, 108, -10, 120, -11, 64, 36, -90, -50, -122, 24, 96, 24, -54, -123, -16, -105, -54,
     * 19, -120, -120, -121, 17, 26, -22, -48, 36, -90, 116, 6, 48, -32, 6, 58, 5, 64, -93, -57, 36, 7, -3, 27, 115,
     * 121, 40, -128, 36, -90, -50, -122, 27, -64, 24, 56, 5, -80, -121, -30, 29, -128, -2, 55, 70, -86, 48, 16, 36,
     * -90, 116, 6, 20, -96, 12, 61, 5, -112, -97, -36, -120, 77, 17, 120, -2, 104, 69, -48, 36, -90, -50, -124, -79,
     * -32, 24, -7, -127, -32, -88, -31, -44, -52, 117, -77, 47, -36, -108, -64, 36, -90, 116, 6, 15, 0, 13, 66, 0, -40,
     * 59, -30, -15, -80, 103, -25, -59, 36, -28, -64, 36, -90, -50, -124, -91, -96, 27, -7, 2, -112, 31, 116, 54, -17,
     * -124, 16, 110, -31, -84, 32, 36, -90, 116, 3, 79, -128, 22, 62, -123, -48, 71, -35, -82, 103, 18, -93, 53, 104,
     * -22, 80, 36, -90, -50, -124, -89, -128, 24, -56, -123, 32, -109, -54, -37, 32, -114, 46, -58, -54, -76, 96, 36,
     * -90, 124, 4, -83, -96, 24, 57, -123, -80, -109, -35, -48, 67, 10, -30, 82, -97, 68, -48, 36, -90, -50, -122, 9,
     * 96, 24, 58, -123, 8, 69, -18, -59, -17, -52, 108, 45, 127, -24, 16, 36, -90, 116, 6, 26, 64, 12, -62, 7, -128,
     * -22, -4, -95, 72, 31, -96, 20, 33, -17, -96 };
     */
    public static byte[] amrData2 = new byte[]
    { -1, -13, -128, -60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 105, 110, 103, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 4, -6, 0, 12, 12, 12, 12, 12, 12,
            37, 37, 37, 37, 37, 37, 62, 62, 62, 62, 62, 62, 87, 87, 87, 87, 87, 87, 87, 112, 112, 112, 112, 112, 112, -113, -113, -113,
            -113, -113, -113, -100, -100, -100, -100, -100, -100, -94, -94, -94, -94, -94, -94, -94, -82, -82, -82, -82, -82, -82, -69,
            -69, -69, -69, -69, -69, -57, -57, -57, -57, -57, -57, -50, -50, -50, -50, -50, -50, -50, -38, -38, -38, -38, -38, -38, -25,
            -25, -25, -25, -25, -25, -19, -19, -19, -19, -19, -19, -1, -1, -1, -1, -1, -1, 0, 0, 0, 57, 76, 65, 77, 69, 51, 46, 57, 54,
            114, 2, 56, 0, 0, 0, 0, 46, 104, 0, 0, 20, 16, 36, 5, -93, 66, 0, 0, 16, 0, 0, 4, -6, -22, -54, 45, -77, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -13, 32, -60, 0, 8, -120,
            50, 84, 1, 70, 0, 0, -78, 96, -28, -12, -64, 66, 18, 64, 32, -128, 97, 97, -9, 9, -63, -9, -126, 97, -14, -128, -126, -63, 3,
            -105, -63, -1, -27, 29, -63, -1, -1, 46, -2, 8, 42, 108, 72, -83, 27, -1, -13, 64, -60, 4, 23, 26, 82, -82, 95, -117, 64, 0,
            13, -121, -29, -15, -8, -4, 126, 0, 0, 1, -119, 12, 51, 46, 66, -47, -74, -20, -125, -84, 107, -4, -104, -66, 42, -3, -82, 123,
            -21, -27, 97, 90, 93, -17, -10, 120, -102, 77, 98, -65, -11, -29, 106, -118, 124, -22, 23, -101, -1, -7, -91, -31, -83, 120,
            -93, 29, 5, -121, 11, -105, -1, -3, 66, -60, -37, -57, 90, 71, -120, 10, 38, 6, -30, -127, -48, -118, 46, 31, -128, -128, -81,
            -87, -25, -63, -122, 73, -25, -63, -107, 60, 50, -1, -13, 64, -60, 2, 22, 34, 82, -36, 1, -123, 88, 0, 63, 83, 8, -76, -23,
            101, -59, 117, -1, -66, 14, 123, -66, 98, -81, 111, -1, -20, -26, -39, -5, 63, -71, -17, -32, -25, 74, -73, -89, 67, -74, 75,
            -102, -44, -90, -23, 59, 62, -123, 28, 123, -74, -53, -45, 38, 19, -26, 56, 52, 53, 29, -25, -114, 60, -48, -122, 29, 9, -116,
            7, 122, 4, -93, 33, -41, -25, -51, 78, 42, 32, 10, 79, 36, -78, 38, -34, -75, 18, -84, -44, -112, 8, 8, -112, 6, -28, -59, 89,
            97, 39, -37, -1, -13, 64, -60, 4, 23, 114, 70, -26, -15, -61, 64, 0, -21, -62, 35, 7, 28, 101, 98, -14, 60, 56, -68, 74, 37, 0,
            -126, 3, -61, 10, 50, 78, 33, 24, 106, -116, 52, 82, 94, 106, 45, 108, 104, -53, -27, -29, 104, -43, 13, 20, 36, -79, -108,
            -67, 36, -1, 124, 114, -56, 48, 109, -17, -15, -15, -15, -92, -18, -30, -30, -124, -68, -111, 74, -76, 13, -64, 24, -128, -24,
            -103, 16, 68, 34, 69, 23, 46, 21, 75, 32, 89, -51, 98, 107, 22, 27, 34, 16, 125, 67, -113, 21, 57, -64, -1, -13, 64, -60, 1,
            22, -54, 54, -39, -84, 48, -45, -95, -85, 109, -112, 32, 24, 53, 62, -112, -107, -60, 23, -56, -53, 94, -70, 104, -31, 71, -86,
            0, -113, -17, 56, -102, 6, -99, -75, 59, 46, -50, -17, 41, -44, -5, -46, -87, -114, -50, -98, 46, -61, 113, -74, 94, 99, 55,
            -1, 28, -121, 72, 0, 117, 33, 32, -31, -10, -33, 62, -65, 77, -51, -71, 33, 100, 96, -117, -69, 72, 114, 13, 30, 122, -116,
            -76, -108, -106, 124, -74, 61, 99, 83, 67, -110, -49, 20, 39, -96, -118, 77, -125, 42, -1, -13, 80, -60, 0, 23, 81, -6, -54,
            54, -34, 16, 69, 30, -126, -104, 120, 0, 64, 6, 85, 46, -105, -8, -61, -112, 79, 20, -128, 52, 32, -55, -62, 6, 0, 99, -59,
            -36, 50, 25, 58, 93, -22, 30, 8, 71, 75, 71, 90, -73, 100, -35, -34, -22, -76, -123, 58, 46, 103, -120, 104, -9, 101, 41, -72,
            -24, -22, 22, -11, -69, -10, -30, 5, -108, 62, 80, 92, 28, -45, 127, -1, -15, -21, 75, 60, 11, 49, -62, -93, 58, -21, -30, 30,
            -95, 70, 25, 102, -106, 50, -125, 67, 93, -25, 10, -18, -62, 106, 125, -53, 2, 81, -118, -37, -75, 4, 3, 78, -81, 82, 32, 6,
            30, -84, 25, -102, 60, -65, 75, -69, -27, -1, -13, 32, -60, 23, 9, 16, 66, -36, 0, 14, 6, 8, -51, 14, 102, 52, 92, 31, 21, 8,
            59, -1, -1, 121, 122, 106, -2, 0, -56, 106, 56, 121, -76, 88, 96, -96, 17, -83, -61, -125, -93, -66, -102, -74, 89, -70, 90,
            32, 117, -70, -88, -1, -13, 16, -60, 25, 8, -112, 66, -32, 82, 3, -52, 8, 100, 56, -29, -38, -3, -79, 111, -3, 4, -22, 76, 33,
            -122, -1, -13, 32, -60, 3, 7, 80, -42, -28, 40, 3, -60, 12, 58, 55, 18, 31, -128, -74, 114, -36, 53, 124, 95, -22, -97, -1, -6,
            100, 98, 34, -127, -88, 17, 47, -55, -53, -114, 6, -22, 7, 2, -127, -122, 73, -81, -107, -31, 39, 87, 82, -96, -1, -13, 32,
            -60, 12, 8, 80, 58, -32, -54, 3, -40, 4, -74, -42, 40, 5, 103, -21, -118, 6, 1, -128, 76, 4, 59, -2, 6, 56, 99, -3, -33, -3,
            69, -86, -87, 97, 36, 119, -75, 97, 67, 46, -84, 110, -74, -63, -113, 47, 125, 11, -4, -1, -13, 32, -60, 17, 8, 16, -66, -44,
            0, -122, 10, 36, -67, -14, -22, 26, -55, 31, 2, -1, -40, -80, -117, -65, -22, -1, -28, -22, -124, 99, 1, 38, 125, -100, 0, -92,
            84, 20, 25, 5, -126, -8, 123, -109, 71, -41, -119, -74, 16, 122, 0, -1, -13, 16, -60, 23, 8, 112, -98, -60, 0, 14, 10, 8, 67,
            -118, -69, 79, -3, -78, 87, -1, -21, -1, -90, 99, 65, -1, -13, 32, -60, 2, 7, -40, -114, -72, 0, 54, 74, 12, -127, 6, 13, 69,
            59, 29, 29, -99, 94, -31, 23, 17, -119, 10, -25, -126, -24, 42, -44, 54, 55, 32, 20, -118, -32, 80, 8, 59, 101, 21, -43, -88,
            48, -85, 41, -32, -85, -111, -112, -1, -13, 32, -60, 9, 6, -80, -126, -80, 0, -42, 10, 40, 76, 126, 101, -44, 5, 86, -49, 106,
            6, 102, -44, -51, 83, 36, 36, 52, -55, -83, -85, 37, 95, 102, -43, 17, -106, 48, -52, 23, 59, -79, 9, 65, -90, -121, 77, -36,
            -20, -1, -17, -1, -13, 16, -60, 21, 8, 64, -114, -84, 1, 88, 16, 1, -1, 124, -1, -33, 39, 14, 40, 64, 48, 63, 0, 42, 6, -1,
            -13, 48, -60, 1, 15, -128, -58, -112, 1, -102, 72, 0, 11, 61, 0, 86, -103, -118, 11, 87, 5, 50, 96, -50, 43, -123, -65, -42,
            -21, -27, -5, -91, -79, -92, 55, -1, -32, -56, -127, 97, 80, -49, -4, 21, 7, 74, -72, -23, -29, -78, -1, -14, 103, -60, 33, 38,
            -32, -69, 67, -123, 65, -105, 6, 63, 28, -32, 34, -40, 44, -49, 35, -20, -106, 76, 65, 77, 69, };

    public static byte[] amrDataResult;

    /*
     * { 35, 33, 65, 77, 82, 10, 12, 31, 87, -98, -30, 113, -51, 117, 125, 89, 94, 104, 96, -28, 12, 52, 98, -32, -8, 8,
     * 22, 77, -103, 115, 34, -1, -73, -4, 12, -46, -73, 31, 56, 11, -17, 37, -14, 110, 83, 62, -14, 118, 12, 83, 26,
     * 11, 24, 9, 45, -59, 126, 127, 72, -93, -55, 60, 12, -89, 74, 46, 39, 96, -46, 16, -124, 95, -53, -40, 112, 20,
     * 12, -43, -18, -91, 27, 0, -44, 24, 53, 106, 21, 59, 95, 52, 12, 120, 45, 47, 8, -99, -77, -23, 80, 107, 49, -80,
     * -65, 20, 12, 124, 63, 63, 36, 34, 71, -104, -66, 114, -99, 104, -77, 100, 12, -87, 62, 69, 41, -112, 47, -7, -20,
     * -86, 2, -8, 84, -10, 12, 43, -35, 67, 44, 33, -26, 107, -3, -100, -85, 73, -102, -58, 12, -87, -6, 79, 64, -112,
     * 87, -98, -19, -61, 41, 116, -106, 16, 12, 18, 15, 95, 40, -108, 21, -73, -4, 124, -117, 58, 11, -6, 12, -87, -42,
     * 103, 48, 37, -113, -69, 82, -84, 78, -72, 6, -6, 12, 18, -125, 111, -124, -53, 7, -122, -100, 108, 86, -69, -71,
     * -110, 12, -83, 41, 111, 40, -65, 7, -122, 52, 103, 38, 10, 54, -84, 12, 101, 41, 111, 72, -49, 39, -114, 4, -77,
     * -105, -126, 105, -10, 12, -83, 55, 110, 77, 43, 23, -41, -33, 76, 41, -42, 100, -66, 12, -43, 19, 111, 45, 47,
     * 79, -60, -6, -76, 58, 124, -58, 60, 12, -49, -108, 109, 5, -65, 87, -9, 61, 86, -115, -48, -65, -100, 0, 0, 0, 0,
     * 0, 0, 0, 88, 105, 110, 103, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 4, -6, 0, 12, 12, 12, 12, 12, 12, 37, 37, 37, 37, 37,
     * 37, 62, 62, 62, 62, 62, 62, 87, 87, 87, 87, 87, 87, 87, 112, 112, 112, 112, 112, 112, -113, -113, -113, -113,
     * -113, -113, -100, -100, -100, -100, -100, -100, -94, -94, -94, -94, -94, -94, -94, -82, -82, -82, -82, -82, -82,
     * -69, -69, -69, -69, -69, -69, -57, -57, -57, -57, -57, -57, -50, -50, -50, -50, -50, -50, -50, -38, -38, -38,
     * -38, -38, -38, -25, -25, -25, -25, -25, -25, -19, -19, -19, -19, -19, -19, -1, -1, -1, -1, -1, -1, 0, 0, 0, 57,
     * 76, 65, 77, 69, 51, 46, 57, 54, 114, 2, 56, 0, 0, 0, 0, 46, 104, 0, 0, 20, 16, 36, 5, -93, 66, 0, 0, 16, 0, 0, 4,
     * -6, -22, -54, 45, -77, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
     * 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, -13, 32, -60, 0, 8, -120, 50, 84, 1, 70, 0, 0, -78, 96, -28, -12, -64, 66, 18, 64,
     * 32, -128, 97, 97, -9, 9, -63, -9, -126, 97, -14, -128, -126, -63, 3, -105, -63, -1, -27, 29, -63, -1, -1, 46, -2,
     * 8, 42, 108, 72, -83, 27, -1, -13, 64, -60, 4, 23, 26, 82, -82, 95, -117, 64, 0, 13, -121, -29, -15, -8, -4, 126,
     * 0, 0, 1, -119, 12, 51, 46, 66, -47, -74, -20, -125, -84, 107, -4, -104, -66, 42, -3, -82, 123, -21, -27, 97, 90,
     * 93, -17, -10, 120, -102, 77, 98, -65, -11, -29, 106, -118, 124, -22, 23, -101, -1, -7, -91, -31, -83, 120, -93,
     * 29, 5, -121, 11, -105, -1, -3, 66, -60, -37, -57, 90, 71, -120, 10, 38, 6, -30, -127, -48, -118, 46, 31, -128,
     * -128, -81, -87, -25, -63, -122, 73, -25, -63, -107, 60, 50, -1, -13, 64, -60, 2, 22, 34, 82, -36, 1, -123, 88, 0,
     * 63, 83, 8, -76, -23, 101, -59, 117, -1, -66, 14, 123, -66, 98, -81, 111, -1, -20, -26, -39, -5, 63, -71, -17,
     * -32, -25, 74, -73, -89, 67, -74, 75, -102, -44, -90, -23, 59, 62, -123, 28, 123, -74, -53, -45, 38, 19, -26, 56,
     * 52, 53, 29, -25, -114, 60, -48, -122, 29, 9, -116, 7, 122, 4, -93, 33, -41, -25, -51, 78, 42, 32, 10, 79, 36,
     * -78, 38, -34, -75, 18, -84, -44, -112, 8, 8, -112, 6, -28, -59, 89, 97, 39, -37, -1, -13, 64, -60, 4, 23, 114,
     * 70, -26, -15, -61, 64, 0, -21, -62, 35, 7, 28, 101, 98, -14, 60, 56, -68, 74, 37, 0, -126, 3, -61, 10, 50, 78,
     * 33, 24, 106, -116, 52, 82, 94, 106, 45, 108, 104, -53, -27, -29, 104, -43, 13, 20, 36, -79, -108, -67, 36, -1,
     * 124, 114, -56, 48, 109, -17, -15, -15, -15, -92, -18, -30, -30, -124, -68, -111, 74, -76, 13, -64, 24, -128, -24,
     * -103, 16, 68, 34, 69, 23, 46, 21, 75, 32, 89, -51, 98, 107, 22, 27, 34, 16, 125, 67, -113, 21, 57, -64, -1, -13,
     * 64, -60, 1, 22, -54, 54, -39, -84, 48, -45, -95, -85, 109, -112, 32, 24, 53, 62, -112, -107, -60, 23, -56, -53,
     * 94, -70, 104, -31, 71, -86, 0, -113, -17, 56, -102, 6, -99, -75, 59, 46, -50, -17, 41, -44, -5, -46, -87, -114,
     * -50, -98, 46, -61, 113, -74, 94, 99, 55, -1, 28, -121, 72, 0, 117, 33, 32, -31, -10, -33, 62, -65, 77, -51, -71,
     * 33, 100, 96, -117, -69, 72, 114, 13, 30, 122, -116, -76, -108, -106, 124, -74, 61, 99, 83, 67, -110, -49, 20, 39,
     * -96, -118, 77, -125, 42, -1, -13, 80, -60, 0, 23, 81, -6, -54, 54, -34, 16, 69, 30, -126, -104, 120, 0, 64, 6,
     * 85, 46, -105, -8, -61, -112, 79, 20, -128, 52, 32, -55, -62, 6, 0, 99, -59, -36, 50, 25, 58, 93, -22, 30, 8, 71,
     * 75, 71, 90, -73, 100, -35, -34, -22, -76, -123, 58, 46, 103, -120, 104, -9, 101, 41, -72, -24, -22, 22, -11, -69,
     * -10, -30, 5, -108, 62, 80, 92, 28, -45, 127, -1, -15, -21, 75, 60, 11, 49, -62, -93, 58, -21, -30, 30, -95, 70,
     * 25, 102, -106, 50, -125, 67, 93, -25, 10, -18, -62, 106, 125, -53, 2, 81, -118, -37, -75, 4, 3, 78, -81, 82, 32,
     * 6, 30, -84, 25, -102, 60, -65, 75, -69, -27, -1, -13, 32, -60, 23, 9, 16, 66, -36, 0, 14, 6, 8, -51, 14, 102, 52,
     * 92, 31, 21, 8, 59, -1, -1, 121, 122, 106, -2, 0, -56, 106, 56, 121, -76, 88, 96, -96, 17, -83, -61, -125, -93,
     * -66, -102, -74, 89, -70, 90, 32, 117, -70, -88, -1, -13, 16, -60, 25, 8, -112, 66, -32, 82, 3, -52, 8, 100, 56,
     * -29, -38, -3, -79, 111, -3, 4, -22, 76, 33, -122, -1, -13, 32, -60, 3, 7, 80, -42, -28, 40, 3, -60, 12, 58, 55,
     * 18, 31, -128, -74, 114, -36, 53, 124, 95, -22, -97, -1, -6, 100, 98, 34, -127, -88, 17, 47, -55, -53, -114, 6,
     * -22, 7, 2, -127, -122, 73, -81, -107, -31, 39, 87, 82, -96, -1, -13, 32, -60, 12, 8, 80, 58, -32, -54, 3, -40, 4,
     * -74, -42, 40, 5, 103, -21, -118, 6, 1, -128, 76, 4, 59, -2, 6, 56, 99, -3, -33, -3, 69, -86, -87, 97, 36, 119,
     * -75, 97, 67, 46, -84, 110, -74, -63, -113, 47, 125, 11, -4, -1, -13, 32, -60, 17, 8, 16, -66, -44, 0, -122, 10,
     * 36, -67, -14, -22, 26, -55, 31, 2, -1, -40, -80, -117, -65, -22, -1, -28, -22, -124, 99, 1, 38, 125, -100, 0,
     * -92, 84, 20, 25, 5, -126, -8, 123, -109, 71, -41, -119, -74, 16, 122, 0, -1, -13, 16, -60, 23, 8, 112, -98, -60,
     * 0, 14, 10, 8, 67, -118, -69, 79, -3, -78, 87, -1, -21, -1, -90, 99, 65, -1, -13, 32, -60, 2, 7, -40, -114, -72,
     * 0, 54, 74, 12, -127, 6, 13, 69, 59, 29, 29, -99, 94, -31, 23, 17, -119, 10, -25, -126, -24, 42, -44, 54, 55, 32,
     * 20, -118, -32, 80, 8, 59, 101, 21, -43, -88, 48, -85, 41, -32, -85, -111, -112, -1, -13, 32, -60, 9, 6, -80,
     * -126, -80, 0, -42, 10, 40, 76, 126, 101, -44, 5, 86, -49, 106, 6, 102, -44, -51, 83, 36, 36, 52, -55, -83, -85,
     * 37, 95, 102, -43, 17, -106, 48, -52, 23, 59, -79, 9, 65, -90, -121, 77, -36, -20, -1, -17, -1, -13, 16, -60, 21,
     * 8, 64, -114, -84, 1, 88, 16, 1, -1, 124, -1, -33, 39, 14, 40, 64, 48, 63, 0, 42, 6, -1, -13, 48, -60, 1, 15,
     * -128, -58, -112, 1, -102, 72, 0, 11, 61, 0, 86, -103, -118, 11, 87, 5, 50, 96, -50, 43, -123, -65, -42, -21, -27,
     * -5, -91, -79, -92, 55, -1, -32, -56, -127, 97, 80, -49, -4, 21, 7, 74, -72, -23, -29, -78, -1, -14, 103, -60, 33,
     * 38, -32, -69, 67, -123, 65, -105, 6, 63, 28, -32, 34, -40, 44, -49, 35, -20, -106, 76, 65, 77, 69, 36, -8, 30,
     * 79, -58, 36, 86, -75, 18, -93, -104, -118, 119, 24, 0, -125, 50, 4, 33, 48, 36, -8, 86, 102, -96, 0, 38, -60,
     * -73, -107, -88, 43, 74, 76, 84, 17, 61, -57, 124, -80, 36, -1, 43, -103, 0, 96, 28, -50, 5, 21, -49, -81, 41,
     * -122, -88, -80, -73, 81, 13, -48, 36, 43, 7, -40, -127, 96, 25, -15, -127, -79, 61, 1, 78, 27, -116, -108, 53,
     * 41, 70, 112, 36, 52, -117, 60, -95, 32, 31, -4, 50, -78, 20, 4, -92, 102, 70, -20, 96, 77, -79, -128, 36, -36, 0,
     * 96, 1, 32, 19, 61, 1, 5, -77, -18, 86, 66, 65, 102, -124, -24, 75, 32, 36, 85, 22, 60, 32, 32, 15, 57, 1, -68, 3,
     * 41, -121, 46, 78, -124, 117, 30, -54, -16, 36, -84, -100, 3, 8, -120, -103, -2, -30, 86, 77, -15, -30, 78, -14,
     * 5, 29, -12, -54, -48, 36, -90, -50, -122, 1, -32, 6, 56, 5, 70, 124, 81, -29, -6, -62, -84, -80, 109, -123, -64,
     * 36, -90, 124, 4, -82, 32, 12, 61, 5, 80, 71, -107, 127, -115, 86, -56, 31, 9, 38, 64, 36, -90, -50, -122, 11, 32,
     * 18, 57, -123, -48, -109, -55, 26, -119, 3, -14, -78, -91, -18, -96, 36, -90, -50, -124, -89, -128, 24, 59, 5, 16,
     * -41, -28, 39, -20, 117, -61, 8, 107, -41, -80, 36, -90, 116, 6, 19, -32, 18, 57, 5, -80, -75, -13, -41, -125, 30,
     * -34, 64, 6, -38, 48, 36, -90, -50, -122, 11, 64, 12, -6, -127, 64, 103, -44, 32, 69, 66, -117, -104, 66, 124,
     * -112, 36, -90, -50, -122, 20, -96, 24, 56, 5, 16, 109, -20, 21, -60, -38, 120, 78, 38, 5, 112, 36, -90, -50,
     * -122, 9, 96, 24, -64, 7, -80, -89, -20, 29, 67, 86, 11, 85, -56, -22, -128, 36, -90, 116, 6, 24, 96, 18, 58, 5,
     * -112, 121, -35, 77, -29, -40, 25, 47, 77, 32, -16, 36, -90, -50, -124, -79, -32, 26, 59, 5, -64, 101, -57, 6, 32,
     * -82, -104, 123, -87, -67, -16, 36, -90, -50, -122, 24, 96, 24, -104, 6, -80, -60, -48, 29, 14, 84, -54, 39, -90,
     * -25, -16, 36, -90, -50, -122, 3, -32, 6, 59, 5, 64, -117, -86, -6, 57, 60, 108, -10, 120, -11, 64, 36, -90, -50,
     * -122, 24, 96, 24, -54, -123, -16, -105, -54, 19, -120, -120, -121, 17, 26, -22, -48, 36, -90, 116, 6, 48, -32, 6,
     * 58, 5, 64, -93, -57, 36, 7, -3, 27, 115, 121, 40, -128, 36, -90, -50, -122, 27, -64, 24, 56, 5, -80, -121, -30,
     * 29, -128, -2, 55, 70, -86, 48, 16, 36, -90, 116, 6, 20, -96, 12, 61, 5, -112, -97, -36, -120, 77, 17, 120, -2,
     * 104, 69, -48, 36, -90, -50, -124, -79, -32, 24, -7, -127, -32, -88, -31, -44, -52, 117, -77, 47, -36, -108, -64,
     * 36, -90, 116, 6, 15, 0, 13, 66, 0, -40, 59, -30, -15, -80, 103, -25, -59, 36, -28, -64, 36, -90, -50, -124, -91,
     * -96, 27, -7, 2, -112, 31, 116, 54, -17, -124, 16, 110, -31, -84, 32, 36, -90, 116, 3, 79, -128, 22, 62, -123,
     * -48, 71, -35, -82, 103, 18, -93, 53, 104, -22, 80, 36, -90, -50, -124, -89, -128, 24, -56, -123, 32, -109, -54,
     * -37, 32, -114, 46, -58, -54, -76, 96, 36, -90, 124, 4, -83, -96, 24, 57, -123, -80, -109, -35, -48, 67, 10, -30,
     * 82, -97, 68, -48, 36, -90, -50, -122, 9, 96, 24, 58, -123, 8, 69, -18, -59, -17, -52, 108, 45, 127, -24, 16, 36,
     * -90, 116, 6, 26, 64, 12, -62, 7, -128, -22, -4, -95, 72, 31, -96, 20, 33, -17, -96 };
     */
    public static byte[] amrDataResult2;

    public static byte[] amrDataResult3;

    private byte[] mergeArrayWith6Indent(byte[] blank, byte[]... data)
    {
        int count = blank.length;
        for (int i = 0; i < data.length; i++)
        {
            if (data[i] != null && data[i].length > 6)
            {
                count += data[i].length - 6;
            }
        }
        count += 6;
        byte[] res = new byte[count];
        int offset = 6;
        for (int i = 0; i < data.length; i++)
        {
            int len = data[i].length - 6;
            if (len > 0)
            {
                System.arraycopy(data[i], 6, res, offset, len);
                offset += len;
            }
        }
        System.arraycopy(data[0], 0, res, 0, 6);
        System.arraycopy(blank, 0, res, offset, blank.length);
        return res;
    }
}
